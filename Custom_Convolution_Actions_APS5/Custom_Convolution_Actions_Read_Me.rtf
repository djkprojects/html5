{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf330
{\fonttbl\f0\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\vieww12000\viewh15840\viewkind0
\deftab720
\pard\pardeftab720\ql\qnatural

\f0\b\fs24 \cf0 Binary FX: Photoshop Tech Vault 3.0
\b0 \

\fs20 \'a92003-2008 Stephen Marsh\
binaryfx@ozemail.com.au
\fs24 \
\

\b Convolution - Custom Filter Manual
\b0 \
\
Convolution is a basic operation found in computer graphic software. Building custom convolution filter kernels \
is an elementary task for image processing students, although this is often far from being the case for the \
average Photoshop user from a GUI background. With regular filters offering speed, flexibility and ease of \
use - Custom filtering is often an esoteric subject that is forgotten in the exploration of more powerful and \
user friendly filters. Custom filters still have limited use, even in Photoshop - particularly so for feature \
detection beyond the Find Edges or Glowing Edges filters. The filter works by using the rules defined in \
the custom filter, to affect brightness levels of the centre pixel found in the kernel matrix, based on the \
values of neighbouring pixels in the kernel matrix - for every pixel in the image or selection. Positive or \
negative pixel values and mathematical operations are entered to produce blurring, sharpening, \
embossing, feature detection and some other basic filtering operations.\
\

\b Photoshop Custom Convolution Kernel Actions\

\b0 Actions are a very flexible and productive method of storing and applying multiple custom\
filter kernels or for quickly generating .ACF files. For maximum compatibility this action set is\
for Photoshop v5.x or higher.\
\
1. Blur: Low Pass Compass x3 Variations\
2. Blur: Weighted Mean x4 Variations\
3. Detect Features: Laplacian x4 Variations\
4. Detect Features: Weighted\
5. Detect Features: Roberts x8 Directions\
6 Detection Sampler: Roberts\
7. Detection Sampler: CG Lineart\
8. Detect Features: Prewitt x8 Directions\
9. Detection Sampler: Prewitt\
10. Detect Features: Robinson x8 Directions\
11. Detection Sampler: Robinson\
12. Detect Features: Sobel x8 Directions\
13. Detection Sampler: Sobel\
14. Detect Features: Kirsch x8 Directions\
15. Detection Sampler: Kirsch\
16. Emboss: Weighted x8 Directions\
17. Sharpen: Laplacian x3 Variations\
18. Sharpen: High Pass Laplacian x3 Variations\
19. Sharpen: High Pass Weighted\
20. Sharpen: Band Pass DoM x6 Variations\
21. Sharpen: Band Pass DoG x6 Variations\
22. Offset: 1/3 Sub Pixel Soft x4 Directions\
23. Offset: 1/2 Sub Pixel Soft x4 Directions\
24. Offset: 1/3 Sub Pixel Sharp x4 Directions\
25. Offset: 1/2 Sub Pixel Sharp x4 Directions\
\

\b Blur: Low Pass Compass x3 Variations\

\b0 A custom kernel with three simple linear blur or mean variations, based on the primary and\
secondary compass directions. 
\i Method A 
\i0 evenly weights the N, S, E and W compass points.\

\i Method B 
\i0 evenly weights the diagonal compass directions. 
\i Method C 
\i0 is often known as a 'box\
mean' - this kernel gives even weighting to both horizontal/vertical and diagonal pixels, which\
is often considered a less ideal approach as human vision gives lesser importance to the\
diagonal directions. Notice that the box mean kernel is simply created by adding the two\
previous compass direction kernels together. Mean filtering should not be confused with the\
more complex median filtering, which does a better job of preserving major edge detail.\

\i Application: This custom filter action is intended for use on alpha channel or layer content.\
\

\i0\b Blur: Weighted Mean x4 Variations\

\b0 A custom kernel with four simple blur variations, using weighted values for the compass\
directions. Horizontal and Vertical directions are given greater importance, with lesser values\
used for the Diagonal directions. Actions are ordered from lighter to heavier filtering.\
Weighted blur kernels are often more computationally efficient than box mean filters.\

\i Application: This custom filter action is intended for use on alpha channel or layer content.\
\

\i0\b Detect Features: Laplacian x4 Variations\

\b0 A custom kernel with four variations which target rapid changes of intensity or the 'second\
derivative' of an image. Unlike many other feature detection operators, the Laplacian is a 2D\
'isotropic' measure and is not biased to any particular compass point direction. The Laplacian\
filter is very sensitive towards noise and a minor Gaussian blur is often applied before this\
command is run. As a side note, a related and more complex custom filter kernel can be\
formed by combining the separate Gaussian blur kernel with a Laplacian kernel - to form a\
LoG or Laplacian of Gaussian feature detection operator. Laplacian actions in this set are\
ordered from lighter to heavier filtering.\

\i Application: This custom filter action is intended for use on alpha channel content.\
\

\i0\b Detect Features: Weighted\

\b0 A custom kernel that is very similar to the basic Laplacian feature detection operator. This\
filter uses a weighted matrix where Horizontal and Vertical directions are given greater\
importance, with lesser values used for the Diagonal directions.\

\i Application: This custom filter action is intended for use on alpha channel content.\
\

\i0\b Detect Features: Roberts x8 Directions\

\b0 The Rober t s ker nel i s a si mpl e 2x2 ker nel whi ch pr ovi des t he 2D spat i al gr adi ent\
measurement of an image. Also known as a 'first derivative' or compass angle feature\
detection kernel, Roberts is used for isolating major sharp detail while passing less significant\
softer detail. A major disadvantage of this operator is that the Roberts kernel is very sensitive\
to noise due to the small amount of pixels used for calculating the filtering operation. The\
Roberts operator is not usually suited to photographic images. The eight directional actions\
use the Photoshop Emboss filter angle naming convention, starting at 12 o'clock and following\
in a clockwise direction.\

\i Application: This custom filter action is intended for use on alpha channel content.\
\

\i0\b Detection Sampler: Roberts\

\b0 The Roberts Detection Sampler creates a temporary greyscale duplicate working file of the\
current document, using merged visible layer content to create a flat image file. Minor noise\
reduction is applied, before the action samples the eight separate Roberts compass direction\
feature detection actions and combines them into a single isotropic image. The final image is\
copied to the clipboard and the temporary working file is closed. The Detection Sampler data\
is then added to the previous document.\

\i Application: This action is intended for use on alpha channel content or layer content with\
high luminance variation. When run on a targeted alpha channel - the alpha channel will be\
replaced. When run on a targeted layer, a new monotone layer will be added above the\
previous targeted layer.\
\

\i0\b Detection Sampler: CG Lineart\

\b0 The CG Lineart action is based on the Roberts Detection Sampler and creates a temporary\
greyscale duplicate working file of the current document, using merged visible layer content to \
create a flat image file. The action samples the eight separate Roberts compass direction feature \
detection actions and combines them into a single isotropic image. No noise reduction is applied \
to the image, as CG rendered art is generally free of such artifacts (unless dithering or lossy \
compression is applied). The final image is copied to the clipboard and the temporary working file \
is closed. The Detection Sampler data is then added to the previous document. This action has the \
ability to detect very fine detail in noise free images generated by layout or illustration applications \
or other software packages. The results of this action are far superior to the standard Adobe detection \
filters or the other kernel actions presented in this set, if the task at hand is detecting fine sharp detail \
in CG generated artwork (alternating 1 pixel wide columns and rows can be successfully detected).\

\i Application: This action is intended for use on alpha channel content or layer content with\
high luminance variation. When run on a targeted alpha channel - the alpha channel will be\
replaced. When run on a targeted layer, a new monotone layer will be added above the\
previous targeted layer.\

\i0 \
\

\b Detect Features: Prewitt x8 Directions\

\b0 The Prewitt kernel is a 3x3 kernel which provides the 'first derivative' or compass angle\
feature detection of an image and is in many respects similar to the previous kernels. The\
Prewitt kernel gives equal weight to the neighbouring pixels and results in a significantly\
greater effect than the simpler Roberts kernel. The 3x3 matrix used in Prewitt feature\
detection is slightly more tolerant of noisy originals and finds a greater amount of features \
than the Roberts kernel. The eight directional actions use the Photoshop Emboss filter \
angle naming convention, starting at 12 o'clock and following in a clockwise direction.\

\i Application: This custom filter action is intended for use on alpha channel content.\

\i0 \
\

\b Detection Sampler: Prewitt\

\b0 The Prewitt Detection Sampler creates a temporary greyscale duplicate working file of the\
current document, using merged visible layer content to create a flat image file. Minor noise \
reduction is applied, before the action samples the eight separate Prewitt compass direction \
feature detection actions and combines them into a single isotropic image. The final image \
is copied to the clipboard and the temporary working file is closed. The Detection Sampler \
data is then added to the previous document.\

\i Application: This action is intended for use on alpha channel content or layer content with\
high luminance variation. When run on a targeted alpha channel - the alpha channel will be\
replaced. When run on a targeted layer, a new monotone layer will be added above the\
previous targeted layer.
\i0 \
\

\b Detect Features: Robinson x8 Directions\

\b0 The Robinson kernel is a 3x3 kernel which provides the 'first derivative' or compass angle\
feature detection of an image and is in many respects similar to the previous kernels. The\
Robinson kernel gives more weight to the centre processed pixel in the kernel matritx and the\
result is similar in final effect to the Prewitt kernel with subtle stronger detection of finer\
detail. The eight directional actions use the Photoshop Emboss filter angle naming convention,\
starting at 12 o'clock and following in a clockwise direction.\

\i Application: This custom filter action is intended for use on alpha channel content.\

\i0 \
\

\b Detection Sampler: Robinson\

\b0 The Robinson Detection Sampler creates a temporary greyscale duplicate working file of the \
current document, using merged visible layer content to create a flat image file. Minor noise \
reduction is applied, before the action samples the eight separate Robinson compass direction \
feature detection actions and combines them into a single isotropic image. The final image is \
copied to the clipboard and the temporary working file is closed. The Detection Sampler data \
is then added to the previous document.\

\i Application: This action is intended for use on alpha channel content or layer content with\
high luminance variation. When run on a targeted alpha channel - the alpha channel will be\
replaced. When run on a targeted layer, a new monotone layer will be added above the\
previous targeted layer.\

\i0 \
\

\b Detect Features: Sobel x8 Directions\

\b0 The Sobel kernel is a 3x3 kernel which provides the 'first derivative' or compass angle feature \
detection of an image and is in many respects similar to the previous kernels. The Sobel kernel \
gives more weight to the centre neighbouring pixels in the kernel matritx and the result is similar \
in final effect to the Robinson kernel with stronger overall detection of gradient magnitude and \
gradient intensity, which makes the Sobel kernel a popular feature detection filter. The eight \
directional actions use the Photoshop Emboss filter angle naming convention, starting at \
12 o'clock and following in a clockwise direction.\

\i Application: This custom filter action is intended for use on alpha channel content.\

\i0 \
\

\b Detection Sampler: Sobel\

\b0 The Sobel Detection Sampler creates a temporary greyscale duplicate working file of the\
current document, using merged visible layer content to create a flat image file. Minor noise \
reduction is applied, before the action samples the eight separate Sobel compass direction \
feature detection actions and combines them into a single isotropic image. The final image \
is copied to the clipboard and the temporary working file is closed. The Detection Sampler \
data is then added to the previous document.\

\i Application: This action is intended for use on alpha channel content or layer content with\
high luminance variation. When run on a targeted alpha channel - the alpha channel will be\
replaced. When run on a targeted layer, a new monotone layer will be added above the\
previous targeted layer.\
\

\i0\b Detect Features: Kirsch x8 Directions\

\b0 The Kirsch kernel is a 3x3 kernel which provides the 'first derivative' or compass angle \
feature detection of an image and is in many respects similar to the previous kernels. \
The Kirsch kernel provides the strongest overall detection of gradient magnitude and \
gradient intensity to be found in this action set. The eight directional actions use the \
Photoshop Emboss filter angle naming convention, starting at 12 o'clock and following \
in a clockwise direction.\

\i Application: This custom filter action is intended for use on alpha channel content.\

\i0 \
\

\b Detection Sampler: Kirsch\

\b0 The Kirsch Detection Sampler creates a temporary greyscale duplicate working file of the\
current document, using merged visible layer content to create a flat image file. Minor noise\
 reduction is applied, before the action samples the eight separate Kirsch compass direction \
feature detection actions and combines them into a single isotropic image. The final image is \
copied to the clipboard and the temporary working file is closed. The Detection Sampler data \
is then added to the previous document.\

\i Application: This action is intended for use on alpha channel content or layer content with\
high luminance variation. When run on a targeted alpha channel - the alpha channel will be\
replaced. When run on a targeted layer, a new monotone layer will be added above the\
previous targeted layer.\

\i0 \
\

\b Emboss: Weighted x8 Directions\

\b0 The eight weighted kernel embossing actions are included more for reference than actual\
production use, as the native Adobe Emboss filter is very flexible and provides excellent\
results. The eight custom emboss kernels use the Photoshop Emboss filter angle naming\
convention, starting at 12 o'clock and following in a clockwise direction.\

\i Application: This action is intended for use on alpha channel content or layer content. For\
si mpl i ci ty of presentati on, some sub steps are di sabl ed by def aul t. If you wi sh the\
preprocessing blur and the postprocessing overlay fade can be enabled.\

\i0 \
\

\b Sharpen: Laplacian x3 Variations\

\b0 A custom kernel with three simple linear Laplacian sharpen variations, based on the primary \
and secondary compass directions. 
\i Method A 
\i0 evenly weights the N, S, E and W compass points. \

\i Method B 
\i0 evenly weights the diagonal compass directions. 
\i Method C 
\i0 gives even weighting to \
both horizontal/vertical and diagonal pixels, which is often considered a less ideal approach \
as human vision gives lesser importance to the diagonal directions.\

\i Application: This custom filter action is intended for use on layer content. For simplicity of\
presentation, a sub step is disabled by default. If you wish the preprocessing blur can be\
enabled (without this step Laplacian sharpening often picks up too much noise).\
\

\i0\b Sharpen: High Pass Laplacian x3 Variations\

\b0 A custom kernel with three simple linear High Pass Laplacian sharpen variations, based on the \
primary and secondary compass directions. 
\i Method A 
\i0 evenly weights the N, S, E and W compass\
 points. 
\i Method B 
\i0 evenly weights the diagonal compass directions. 
\i Method C 
\i0 gives even weighting \
to both horizontal/vertical and diagonal pixels, which is often considered a less ideal approach as \
human vision gives lesser importance to the diagonal directions.\

\i Application: This custom filter action is intended for use on layer content. For simplicity of\
presentation, some sub steps are disabled by default. If you wish the preprocessing blur can\
be enabled (without this step Laplacian High Pass sharpening often picks up too much noise)\
and the desaturate postprocessing step can also be activated. A duplicated target layer is\
presumed, so that the high pass layer can be blended in soft light, overlay, hard light or other\
suitable blend modes which are offered in Photoshop 7. If running to a single layer, use of the\
fade command to one of these blend modes is recommended.\

\i0 \
\

\b Sharpen: High Pass Weighted\

\b0 A custom kernel with a simple weighted High Pass sharpen.\

\i Application: This custom filter action is intended for use on layer content. For simplicity of\
presentation, some sub steps are disabled by default. If you wish the preprocessing blur can\
be enabled (in addition to the built in blur in the Weighted High Pass kernel ) and the\
desaturate postprocessing step can also be activated. A duplicated target layer is presumed,\
so that the high pass layer can be blended in soft light, overlay, hard light or other suitable\
blend modes which are offered in Photoshop 7. If running to a single layer, use of the fade\
command to one of these blend modes is recommended.\

\i0 \
\

\b Sharpen: Band Pass DoM x6 Variations\

\b0 This group of six actions simulate a crude Band Pass operation, using the 'Difference of\
Medians' technique. A temporary duplicate work file is created. Two targeted median filtering \
operations are performed on two layer copies of the original file. The two median filtered images\
 are then subtracted from each other via a mid grey offset value - revealing the image frequencies \
which are passed between the difference of the two median filtered image ranges. Each action \
has an increasing halo width which is expressed as a standard deviation value between the\
 median filters.\

\i Application: This action is intended for use on layer content. A new layer will be added above\
the current targeted layer. The band pass layer can be blended in soft light, overlay, hard\
light or other suitable blend modes which are offered in Photoshop 7.\

\i0 \
\

\b Sharpen: Band Pass DoG x6 Variations\

\b0 This group of six actions simulate a crude Band Pass operation, using the 'Difference of\
Gaussian's technique. A temporary duplicate work file is created. Two targeted Gaussian \
blur filtering operations are performed on two layer copies of the original file. The two \
Gaussian blur filtered images are then subtracted from each other via a mid grey offset value - \
revealing the image frequencies which are passed between the difference of the two Gaussian \
blur filtered image ranges. Each action has an increasing halo width which is expressed as a \
standard deviation value between the Gaussian filters. The DoG operation is generally performed \
by custom convolution using a single complex kernel (often a 7x7 matrix or higher), although for \
simplicity the same approach as the DoM technique is used instead of custom convolution).\

\i Application: This action is intended for use on layer content. A new layer will be added above\
the current targeted layer. The band pass layer can be blended in soft light, overlay, hard\
light or other suitable blend modes which are offered in Photoshop 7.\
\

\i0\b Offset: 1/3 Sub Pixel Soft x4 Directions\

\b0 Custom convolution is used to simulate sub pixel movements. Due to the nature of the offset \
kernel some mi nor bl ur or l oss of detai l may resul t when new bri ghtness val ues are \
calculated. Approximate sub pixel offset is 1/3 pixel, ordered clockwise from the north compass \
point direction.\

\i Application: This action is intended for use on layer content.\

\i0 \
\

\b Offset: 1/2 Sub Pixel Soft x4 Directions\

\b0 Custom convolution is used to simulate sub pixel movements. Due to the nature of the offset kernel \
some mi nor bl ur or l oss of detai l may result when new bri ghtness val ues are calculated. \
Approximate sub pixel offset is 1/2 pixel, ordered clockwise from the north compass point direction.\

\i Application: This action is intended for use on layer content.\

\i0 \
\

\b Offset: 1/3 Sub Pixel Sharp x4 Directions\

\b0 Custom convolution is used to simulate sub pixel movements. Due to the nature of the offset kernel \
some mi nor bl ur or l oss of detai l may resul t when new bri ghtness val ues are calculated. To counter \
this, a sharpen operation is included in the offset kernel. Approximate sub pixel offset is 1/3 pixel, \
ordered clockwise from the north compass point direction.\

\i Application: This action is intended for use on layer content.\

\i0 \
\

\b Offset: 1/2 Sub Pixel Sharp x4 Directions\

\b0 Custom convolution is used to simulate sub pixel movements. Due to the nature of the offset kernel some \
minor bl ur or l oss of detai l may resul t when new bri ghtness val ues are calculated. To counter this, a \
sharpen operation is included in the offset kernel. Approximate sub pixel offset is 1/2 pixel, ordered clockwise \
from the north compass point direction.\

\i Application: This action is intended for use on layer content.\

\i0 \
\

\i Two excellent sources of information on custom convolution can be found at the URL's below. Each site presents \
\pard\pardeftab720\ri-2463\ql\qnatural
\cf0 the topic of convolution with interactive web browser based Java presentations which are an excellent method \
\pard\pardeftab720\ql\qnatural
\cf0 of illustrating the custom filtering process.\
\
http://www.eas.asu.edu/~karam/2dconvolution/\
http://micro.magnet.fsu.edu/primer/java/digitalimaging/processing/convolutionkernels/index.html\
\
Special thanks to John Opitz for help in testing and for his excellent suggestions.\

\i0 \
}